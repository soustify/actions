name: 'Golang Build'
description: 'Golang Build Applications'
inputs:
  go-version:
    description: 'go version'
    required: true
    default: '^1.19'
  artifact_name:
    description: 'Artifact builded name'
    required: true
  artifact_main_path:
    description: 'Artifact main path'
    required: true
  lambda_compile:
    description: 'Artifact main path'
    required: false
    default: "true"
runs:
  using: composite
  steps:
  - name: Checkout code
    uses: actions/checkout@v4

  - name: Set up Go
    uses: actions/setup-go@v5
    with:
      go-version: ${{ inputs.go-version }}

  - name: Clean mod cache
    run: go clean --modcache
    shell: bash

  - uses: actions/cache@v4
    with:
      path: |
        ~/.cache/go-build
        ~/go/pkg/mod
      key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      restore-keys: |
        ${{ runner.os }}-go-

  - name: Tidy
    shell: bash
    run: go mod tidy

  - name: Download dependencies
    shell: bash
    run: go mod download

  - name: Building Lambda
    shell: bash
    if: ${{ inputs.lambda_compile == 'true' }}
    run: |
      echo "Commit SHA: ${{ github.sha }}"
      GOOS=linux GOARCH=arm64 go build -tags lambda.norpc -ldflags "-X config.Sha=${{ github.sha }}" -o ${{ inputs.artifact_name }} ${{ inputs.artifact_main_path }}

  - name: Building Container
    shell: bash
    if: ${{ inputs.lambda_compile == 'false' }}
    run: |
      echo "Commit SHA: ${{ github.sha }}"
      go mod verify
      go mod vendor
      GOOS=linux go build -a -buildvcs=false -installsuffix cgo -o ${{ inputs.artifact_name }} ${{ inputs.artifact_main_path }}

  - name: Upload artifact
    uses: actions/upload-artifact@v4
    with:
      name: ${{ inputs.artifact_name }}
      path: ${{ inputs.artifact_name }}
      retention-days: 1