name: Generate Protobuf

on:
  workflow_call:
    inputs:
      repository_name:
        required: true
        type: string

      runner_name:
        required: true
        type: string


      runner_category:
        required: true
        type: string

      branch_name:
        required: true
        type: string

      using_connect:
        required: false
        type: boolean
        default: true

      language:
        required: true
        type: string

      proto_folder:
        required: false
        type: string
        default: 'proto'



concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

jobs:
  compile-proto:
    name: compile
    runs-on: ['${{ inputs.runner_name }}', '${{inputs.branch_name}}', '${{inputs.runner_category}}', "self-hosted", "linux", "x64", "amazon"]
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install compiler
        run: |
          sudo yum update -y
          sudo yum install -y gcc git make unzip curl

      - name: Install grpc gen
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.31.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
          export PATH="$PATH:$(go env GOPATH)/bin"

      - name: Install protoc
        run: |
          PROTOC_ZIP=protoc-21.12-linux-x86_64.zip
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v21.12/$PROTOC_ZIP
          unzip -o $PROTOC_ZIP -d $HOME/.local bin/protoc
          unzip -o $PROTOC_ZIP -d $HOME/.local 'include/*'
          export PATH="$HOME/.local/bin:$PATH"

      - name: Add protoc to PATH
        run: |
          sudo ln -sf $HOME/.local/bin/protoc /usr/local/bin/protoc

      - name: Install validation
        run: |
          git clone https://github.com/bufbuild/protoc-gen-validate.git
          cd protoc-gen-validate
          git checkout tags/v1.2.1-java
          make build
          git clone https://github.com/bufbuild/connect-go.git
          cd connect-go/cmd/protoc-gen-connect-go
          go build -o $HOME/go/bin/protoc-gen-connect-go


      - name: Compile Proto Files for Go
        if: inputs.using_connect && inputs.language == 'go'
        run: |
          mkdir -p golang
          protoc --proto_path=${{inputs.proto_folder}} --go_out=golang --go-grpc_out=golang ${{inputs.proto_folder}}/*.proto --validate_out="lang=go:golang" --connect-go_out=golang --connect-go_opt=package_suffix=rest

      - name: Compile Proto Files for Go
        if: inputs.using_connect == false && inputs.language == 'go'
        run: |
          mkdir -p golang
          protoc --proto_path=${{inputs.proto_folder}} --go_out=golang --go-grpc_out=golang ${{inputs.proto_folder}}/*.proto --validate_out="lang=go:golang"


      - name: Move Files
        if: inputs.language == 'go'
        run: |
          cd golang
          mv github.com/soustify/${{ inputs.repository_name }}/pkg/* .
          rm -rf github.com

      - name: Upload Generated Code
        if: inputs.language == 'go'
        uses: actions/upload-artifact@v4
        with:
          name: golang-artifact
          path: golang
          retention-days: 1


  publish:
    name: publish-go
    if: inputs.language == 'go'
    runs-on: ['${{ inputs.runner_name }}', '${{inputs.branch_name}}', '${{inputs.runner_category}}', "self-hosted", "linux", "x64", "amazon"]
    needs: compile-proto
    steps:
      - name: 'download-source'
        uses: actions/download-artifact@v4
        with:
          name: golang-artifact

      - name: 'Show data'
        run: "ls -ltra"

      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: soustify/${{ github.event.repository.name }}-proto-go
          token: ${{ secrets.PAT_TOKEN }}
          ref: ${{ github.ref_name }}
          path: target-${{ github.event.repository.name }}-go


      - name: Clean and copy golang classes to target repository
        run: |
          rm -rf target-${{ github.event.repository.name }}-go/pkg/
          mkdir -p target-${{ github.event.repository.name }}-go/pkg/ports
          cp -R ports/* target-${{ github.event.repository.name }}-go/pkg/ports

      - name: Commit and push changes golang
        working-directory: target-${{ github.event.repository.name }}-go
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add .
          git commit -m "Atualiza structs golang geradas a partir dos arquivos Protobuf" || echo "Sem alterações para commit"
          git push origin ${{ github.ref_name }}
